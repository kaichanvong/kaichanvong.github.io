<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <title>What is XSL?</title>
  <style type="text/css" xml:space="preserve">
    body {background-color: white; }
    pre {background-color: #DDD; }
  </style>
</head>

<body>
<h1>What is XSL?</h1>
<p>Reference: <a href="https://www.w3.org/Style/XSL/WhatIsXSL.html">w3.org</p>

<p>XSL is a language for expressing style sheets. An XSL style sheet is, like
with <a href="https://www.w3.org/Style/CSS">CSS</a>, a file that describes how to display an
XML document of a given type. XSL shares the functionality and is compatible
with CSS2 (although it uses a different syntax). It also adds:</p>
<ul>
  <li>A transformation language for XML documents: <strong>XSLT</strong>.
    Originally intended to perform complex styling operations, like the
    generation of tables of contents and indexes, it is now used as a general
    purpose XML processing language. XSLT is thus widely used for purposes
    other than XSL, like generating HTML web pages from XML data.</li>
  <li>Advanced styling features, expressed by an XML document type which
    defines a set of elements called <strong>Formatting Objects</strong>, and
    attributes (in part borrowed from CSS2 properties and adding more complex
    ones.</li>
</ul>

<h1>How Does It Work?</h1>

<p>Styling requires a source XML documents, containing the information that
the style sheet will display and the style sheet itself which describes how
to display a document of a given type.</p>
The following shows a sample XML file and how it can be transformed and
rendered.

<h2>The XML file</h2>
<pre>&lt;scene&gt;
  &lt;FX&gt;General Road Building noises.&lt;/FX&gt;
  &lt;speech speaker="Prosser"&gt;
    Come off it Mr Dent, you can't win
    you know. There's no point in lying
    down in the path of progress.
  &lt;/speech&gt;
  &lt;speech speaker="Arthur"&gt;
    I've gone off the idea of progress.
    It's overrated
  &lt;/speech&gt;
&lt;/scene&gt;</pre>

<p>This XML file doesn't contain any presentation information, which is
contained in the stylesheet. Separating the document's content and the
document's styling information allows displaying the same document on
different media (like screen, paper, cell phone), and it also enables users
to view the document according to their preferences and abilities, just by
modifying the style sheet.</p>

<h2>The Stylesheet</h2>

<p>Here are two templates from the stylesheet used to format the XML file.
The <a href="https://www.w3.org/Style/XSL/WhatIsXSL-example.xsl">full stylesheet</a> (which includes extra
information on pagination and margins) is available.</p>
<pre>...
&lt;xsl:template match="FX"&gt;
  &lt;fo:block font-weight="bold"&gt;
    &lt;xsl:apply-templates/&gt;
  &lt;/fo:block&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="speech[@speaker='Arthur']"&gt;
  &lt;fo:block background-color="blue"&gt;
    &lt;xsl:value-of select="@speaker"/&gt;:
    &lt;xsl:apply-templates/&gt;
  &lt;/fo:block&gt;
&lt;/xsl:template&gt;
...</pre>

<p>The stylesheet can be used to transform any instance of the DTD it was
designed for. The first rule says that an FX element will be transformed into
a block with a bold font. <code>&lt;xsl:apply-templates/&gt;</code> is a
recursive call to the template rules for the contents of the current element.
The second template applies to all speech elements that have the speaker
attribute set to <code>Arthur</code>, and formats them as blue blocks within
which the value speaker attribute is added before the text.</p>

<h2>Rendering</h2>

<p>The figure below shows a rendering of the Formatting Objects generated by
the XML file and the stylesheet. The XSL-FO vocabulary is designed to be
displayed on a wide variety of media: screen, paper, or even voice. The <a
href="https://www.w3.org/Style/XSL/WhatIsXSL-example.pdf">full PDF document</a> is also available.</p>

<p><img src="https://www.w3.org/Style/XSL/example.png" alt="Rendering of the XML example"></p>
<hr>

<h1>Frequently Asked Questions</h1>
<dl>
  <dt>How is XSL different from <a href="https://www.w3.org/Style/CSS/">CSS</a>?</dt>
    <dd>XSL uses a XML notation, CSS uses its own. In CSS, the formatting
      object tree is almost the same as the source tree, and inheritance of
      formatting properties is on the source tree. In XSL, the formatting
      object tree can be radically different from the source tree, and
      inheritance of formatting properties is on the formatting object tree.
      <p>Most modern Web browsers support both CSS and XSLT; there
      are also many stand-alone XSLT implementations.</dd>
    </dd>
  <dt>Will XSL replace CSS?</dt>
    <dd>No. They are likely to co-exist since they meet different needs. XSL
      is intended for complex formatting where the content of the document
      might be displayed in multiple places; for example the text of a
      heading might also appear in a dynamically generated table of contents.
      CSS is intended for dynamic formatting of online documents for multiple
      media; its strictly declarative nature limits its capabilities but also
      makes it efficient and easy to generate and modify in the
      content-generation workflow. So they are two different tools; for some
      tasks, CSS is the appropriate choice and for some tasks, XSL. They can
      also be used together - use XSL on the server to condense or customize
      some XML data into a simpler XML document, then use CSS to style it on
      the client.</dd>
  <dt>How is XSL different from DSSSL? From DSSSL-O?</dt>
    <dd>DSSSL is an International Standard style sheet language. It is
      particularly used for formatting of print documents. DSSSL-O is a
      profile of DSSSL which removes some functionality and adds capabilities
      to make it more suited for online documentation. XSL draws on DSSSL and
      the DSSSL-O work and continues the trend towards a Web-oriented style
      sheet language by integrating experience with CSS.</dd>
  <dt>Will XSL replace DSSSL?</dt>
    <dd>DSSSL has capabilities that XSL does not, and continues in use in the
      print publishing industry. Experience with XSL might be used in a
      future revision of DSSSL, but it is too early to say.</dd>
  <dt>So, CSS is for HTML and XSL is for XML?</dt>
    <dd>No, CSS can be used with HTML and also with XML, provided that the
      XML document has a reasonably linear structure that can be displayed
      without extensive manipulation. See the <a href="https://www.w3.org/TR/REC-CSS2">CSS2
      Recommendation</a> for details.
      <p>XSL is targeted at XML, in particular highly-structured, data-rich
      documents that require extensive formatting.</p>
    </dd>
  <dt>Should I render all my XML documents to HTML on the server?</dt>
    <dd>Unless you are very careful to retain semantics, no. XSL can be used
      server-side and client-side. The XSL Submission has two classes of
      output: DSSSL-style flow objects and HTML tags. Unfortunately, the
      combination of server-side processing and HTML tag output can result in
      completely inaccessible, hard to search, hard to index presentational
      HTML (the sort that is a mass of FONT and BR tags, spacer gifs - you
      know, the sort of single-shot presentational mess that <a
      href="https://www.w3.org/Style">style sheets</a> were designed to avoid).
      <p>The trouble is that by "rendering" to HTML, all that remains of your
      carefully crafted XML semantics are the presentational aspects - block
      element, this font, that weight - which makes it hard to generate
      decent HTML.</p>
    </dd>
  <dt>Technical: how do I do X, Y or Z in XSL?</dt>
    <dd>First, have a look at D. Pawson's excellent <a
      href="http://www.dpawson.co.uk/xsl">XSL FAQ</a>. If you
      don't find an answer, check the XSL mailing list at
    mulberrytech.com</dd>
</dl>
</body>
</html>
